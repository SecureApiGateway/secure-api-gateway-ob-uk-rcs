---
apiVersion: {{ .Values.deployment.apiVersion }}
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    type: {{ .Values.deployment.strategyType}}
    {{ if eq .Values.deployment.strategyType "RollingUpdate" }}
    rollingUpdate:
      maxSurge: {{ .Values.deployment.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.deployment.rollingUpdate.maxUnavailable }}
    {{ end }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        appVersion: {{ .Chart.AppVersion }}
        helmVersion: {{ .Chart.Version }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.deployment.image.repo }}:{{ default .Chart.AppVersion .Values.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.image.imagePullPolicy }}
          volumeMounts:
            - name: rcs-signing
              mountPath: /app/secrets
              readOnly: true
          ports:
            - name: http-server
              containerPort: {{ .Values.deployment.containerPort }}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.deployment.containerPort }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds | quote }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold | quote }}
            successThreshold: {{ .Values.readinessProbe.successThreshold | quote }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds | quote }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.deployment.containerPort }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds | quote }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds | quote }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold | quote }}
            successThreshold: {{ .Values.livenessProbe.successThreshold | quote }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds | quote }}
          env:
          - name: CONSENT_REPO_URI
            valueFrom:
              configMapKeyRef:
                name: deployment-config
                key: CONSENT_REPO_URI
          - name: RS_API_URI
            valueFrom:
              configMapKeyRef:
                name: deployment-config
                key: RS_API_URI
          - name: SERVER_PORT
            value: {{ .Values.deployment.containerPort | quote }}
          - name: SPRING_PROFILES_ACTIVE
            value: "docker"
          - name: JAVA_OPTS
            value: {{ .Values.deployment.java.opts }}
          - name: RCS_CONSENT_RESPONSE_JWT_PRIVATEKEYPATH
            value: /app/secrets/rcs-signing.key
          - name: RCS_CONSENT_RESPONSE_JWT_SIGNINGKEYID
            valueFrom:
              configMapKeyRef:
                name: deployment-config
                key: RCS_CONSENT_RESPONSE_JWT_SIGNINGKEYID
          - name: RCS_CONSENT_RESPONSE_JWT_ISSUER
            valueFrom:
              configMapKeyRef:
                name: deployment-config
                key: RCS_CONSENT_RESPONSE_JWT_ISSUER
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
      volumes:
        - name: rcs-signing
          secret:
            secretName: rcs-signing
            optional: false
